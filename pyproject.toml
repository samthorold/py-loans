[tool.poetry]
name = "py_loan"
version = "0.1.0"
description = ""
authors = ["Sam Thorold <sam.thorold@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.0.3"

[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = "^23.7.0" }
mypy = "^1.4.1"
pytest-cov = "^4.1.0"
rich = { extras = ["all"], version = "^13.4.2" }
flake8 = "^6.0.0"
flake8-pyproject = "^1.2.3"
mkdocstrings = {extras = ["python"], version = "^0.22.0"}
mkdocs-material = "^9.1.21"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--doctest-modules"

[tool.coverage.run]
parallel = true
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
strict = true

[tool.flake8]
max-line-length = 100
